name: Server

on:
  push:
    branches: ["main"]
    paths:
      - "server/**"
  pull_request:
    branches: ["**"]
    types: [opened, synchronize]
    paths:
      - "server/**"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgresql://root:password@postgres:5432/binge-at-home
  SQLX_OFFLINE: true

jobs:
  check:
    name: Server Check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2.2.0
        with:
          shared-key: whooosh
          workspaces: server

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path server/Cargo.toml

  test:
    name: Server Test Suite
    runs-on: ubuntu-latest
    needs: check
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: binge-at-home
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2.2.0
        with:
          shared-key: whooosh
          workspaces: server

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path server/Cargo.toml

  lints:
    name: Server Lints
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2.2.0
        with:
          shared-key: whooosh
          workspaces: server

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path server/Cargo.toml -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path server/Cargo.toml -- -D warnings
